{
    "data": {
        "name": "Vision models",
        "slug": "vision-models",
        "description": "Multimodal large language models with vision capabilities like object detection and optical character recognition (OCR)",
        "models": [
            {
                "cover_image_url": "https://replicate.delivery/pbxt/9V1JDXddn1osJp1nffLISS38MtF3BdVT46Xg5npK2cFHZAoQA/sample.png",
                "created_at": "2023-03-15T20:52:05.053658Z",
                "default_example": {
                    "completed_at": "2023-03-15T23:27:03.811810Z",
                    "created_at": "2023-03-15T23:26:46.664741Z",
                    "error": null,
                    "id": "s3y3cut5zvamvlndwpyhxyumme",
                    "input": {
                        "mode": "text-to-image generation",
                        "prompt": "an elephant under the sea",
                        "guidance_scale": "8",
                        "num_inference_steps": 50
                    },
                    "logs": "Using seed: 36013",
                    "metrics": {
                        "predict_time": 17.063975
                    },
                    "output": {
                        "generated_text": null,
                        "generated_image": "https://replicate.delivery/pbxt/9V1JDXddn1osJp1nffLISS38MtF3BdVT46Xg5npK2cFHZAoQA/sample.png"
                    },
                    "started_at": "2023-03-15T23:26:46.747835Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/s3y3cut5zvamvlndwpyhxyumme",
                        "cancel": "https://api.replicate.com/v1/predictions/s3y3cut5zvamvlndwpyhxyumme/cancel"
                    },
                    "model": "cjwbw/unidiffuser",
                    "version": "3f3d7dc765e53842cad70eedf3f103db9ef109260cbf0c7a819a2a09f491619a",
                    "webhook_completed": null
                },
                "description": "One Transformer Fits All Distributions in Multi-Modal Diffusion at Scale",
                "github_url": "https://github.com/chenxwh/unidiffuser",
                "latest_version": {
                    "id": "0967db6b8843a90b4b1a2be08f553fcba60dbb8790c79864469644b1c8eecfd7",
                    "created_at": "2023-03-15T23:51:59.306280Z",
                    "cog_version": "0.6.1",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "mode": {
                                    "enum": [
                                        "text-to-image generation",
                                        "image-to-text generation",
                                        "joint generation",
                                        "text generation",
                                        "image generation",
                                        "text variation",
                                        "image variation"
                                    ],
                                    "type": "string",
                                    "title": "mode",
                                    "description": "An enumeration."
                                },
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "properties": {
                                        "mode": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/mode"
                                                }
                                            ],
                                            "default": "text-to-image generation",
                                            "x-order": 0,
                                            "description": "Choose between Visual Question Answering and Image Captioning"
                                        },
                                        "seed": {
                                            "type": "integer",
                                            "title": "Seed",
                                            "x-order": 5,
                                            "description": "Random seed. Leave blank to randomize the seed"
                                        },
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 2,
                                            "description": "Input image"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "x-order": 1,
                                            "description": "Input prompt"
                                        },
                                        "guidance_scale": {
                                            "type": "number",
                                            "title": "Guidance Scale",
                                            "default": 8,
                                            "maximum": 20,
                                            "minimum": 1,
                                            "x-order": 4,
                                            "description": "Scale for classifier-free guidance"
                                        },
                                        "num_inference_steps": {
                                            "type": "integer",
                                            "title": "Num Inference Steps",
                                            "default": 50,
                                            "maximum": 500,
                                            "minimum": 1,
                                            "x-order": 3,
                                            "description": "Number of denoising steps"
                                        }
                                    }
                                },
                                "Output": {
                                    "$ref": "#/components/schemas/ModelOutput",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "ModelOutput": {
                                    "type": "object",
                                    "title": "ModelOutput",
                                    "properties": {
                                        "generated_text": {
                                            "type": "string",
                                            "title": "Generated Text"
                                        },
                                        "generated_image": {
                                            "type": "string",
                                            "title": "Generated Image",
                                            "format": "uri"
                                        }
                                    }
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "output",
                                                "logs",
                                                "start",
                                                "completed"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs"
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/thu-ml/unidiffuser/blob/main/LICENSE",
                "name": "unidiffuser",
                "owner": "cjwbw",
                "paper_url": "https://arxiv.org/abs/2303.06555",
                "run_count": 1052,
                "url": "https://replicate.com/cjwbw/unidiffuser",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/e8f484a0-8859-4fe3-b3a7-6f77c6f5e658/mplug-owl-logo.png",
                "created_at": "2023-05-10T20:10:55.275987Z",
                "default_example": {
                    "completed_at": "2023-05-11T20:41:45.367211Z",
                    "created_at": "2023-05-11T20:41:34.481086Z",
                    "error": null,
                    "id": "c7rek7mxszeebjda52rtea3cg4",
                    "input": {
                        "img": "https://replicate.delivery/pbxt/Io5RPgJuXv0NrYiefJ6mW7jadKLxebgsaZo0iyGJngHR93cv/fishfeet.webp",
                        "seed": -1,
                        "top_k": 25,
                        "top_p": 1,
                        "prompt": "I designed these sandals. Can you help me write an advertisement?\n",
                        "max_length": 500,
                        "temperature": 0.75,
                        "penalty_alpha": 0.25,
                        "length_penalty": 1,
                        "repetition_penalty": 1
                    },
                    "logs": "torch.Size([1, 129])\ntorch.Size([1, 3, 224, 224])",
                    "metrics": {
                        "predict_time": 10.84697
                    },
                    "output": [
                        "Exquisite ",
                        "and ",
                        "eye-catching, ",
                        "the ",
                        "pair ",
                        "of ",
                        "fish-themed ",
                        "sandals ",
                        "is ",
                        "sure ",
                        "to ",
                        "turn ",
                        "heads. ",
                        "Perfect ",
                        "for ",
                        "beach ",
                        "days ",
                        "or ",
                        "casual ",
                        "outings, ",
                        "these ",
                        "unique ",
                        "sandals ",
                        "feature ",
                        "a ",
                        "pair ",
                        "of ",
                        "large ",
                        "fish ",
                        "painted ",
                        "in ",
                        "green ",
                        "and ",
                        "yellow, ",
                        "adding ",
                        "a ",
                        "whimsical ",
                        "touch ",
                        "to ",
                        "any ",
                        "outfit.\n\nWith ",
                        "their ",
                        "innovative ",
                        "design, ",
                        "these ",
                        "sandals ",
                        "are ",
                        "unlike ",
                        "any ",
                        "other, ",
                        "promising ",
                        "to ",
                        "stand ",
                        "out ",
                        "in ",
                        "a ",
                        "crowd ",
                        "and ",
                        "make ",
                        "a ",
                        "statement. ",
                        "Boasting ",
                        "impeccable ",
                        "craftsmanship ",
                        "and ",
                        "attention ",
                        "to ",
                        "detail, ",
                        "these ",
                        "sandals ",
                        "are ",
                        "a ",
                        "must-have ",
                        "for ",
                        "those ",
                        "who ",
                        "value ",
                        "individuality ",
                        "and ",
                        "want ",
                        "to ",
                        "make ",
                        "a ",
                        "statement ",
                        "while ",
                        "on ",
                        "their ",
                        "feet.\n\nSo, ",
                        "for ",
                        "all ",
                        "those ",
                        "who ",
                        "seek ",
                        "unique, ",
                        "high-quality ",
                        "sandals, ",
                        "look ",
                        "no ",
                        "further. ",
                        "Be ",
                        "the ",
                        "envy ",
                        "of ",
                        "your ",
                        "friends ",
                        "and ",
                        "family ",
                        "with ",
                        "these ",
                        "exotic ",
                        "fish-themed ",
                        "sandals, ",
                        "which ",
                        "are ",
                        "sure ",
                        "to ",
                        "turn ",
                        "heads ",
                        "and ",
                        "make ",
                        "a ",
                        "lasting ",
                        "impression."
                    ],
                    "started_at": "2023-05-11T20:41:34.520241Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/c7rek7mxszeebjda52rtea3cg4",
                        "cancel": "https://api.replicate.com/v1/predictions/c7rek7mxszeebjda52rtea3cg4/cancel"
                    },
                    "model": "joehoover/mplug-owl",
                    "version": "d3b69dbf97e0d6072268d4fb1dfef0fb9355e5bffdf39e83b7811dd7b0ff0a7e",
                    "webhook_completed": null
                },
                "description": "An instruction-tuned multimodal large language model that generates text based on user-provided prompts and images",
                "github_url": "https://github.com/replicate/cog-mplug-owl",
                "latest_version": {
                    "id": "51a43c9d00dfd92276b2511b509fcb3ad82e221f6a9e5806c54e69803e291d6b",
                    "created_at": "2023-05-12T00:57:45.768640Z",
                    "cog_version": "0.7.0-beta17",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "prompt",
                                        "img"
                                    ],
                                    "properties": {
                                        "img": {
                                            "type": "string",
                                            "title": "Img",
                                            "format": "uri",
                                            "x-order": 1,
                                            "description": "Image to send to mPLUG-Owl."
                                        },
                                        "seed": {
                                            "type": "integer",
                                            "title": "Seed",
                                            "default": -1,
                                            "minimum": -1,
                                            "x-order": 10,
                                            "description": "Set seed for reproducible outputs. Set to -1 for random seed."
                                        },
                                        "debug": {
                                            "type": "boolean",
                                            "title": "Debug",
                                            "default": false,
                                            "x-order": 11,
                                            "description": "provide debugging output in logs"
                                        },
                                        "top_k": {
                                            "type": "integer",
                                            "title": "Top K",
                                            "default": 1,
                                            "maximum": 500,
                                            "minimum": 1,
                                            "x-order": 5,
                                            "description": "When decoding text, samples from the top k most likely tokens; lower to ignore less likely tokens. Defaults to 0 (no top-k sampling)."
                                        },
                                        "top_p": {
                                            "type": "number",
                                            "title": "Top P",
                                            "default": 1,
                                            "maximum": 1,
                                            "minimum": 0.01,
                                            "x-order": 4,
                                            "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "x-order": 0,
                                            "description": "Prompt to send to mPLUG-Owl."
                                        },
                                        "max_length": {
                                            "type": "integer",
                                            "title": "Max Length",
                                            "default": 512,
                                            "minimum": 1,
                                            "x-order": 2,
                                            "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens"
                                        },
                                        "temperature": {
                                            "type": "number",
                                            "title": "Temperature",
                                            "default": 0.75,
                                            "maximum": 5,
                                            "minimum": 0.01,
                                            "x-order": 3,
                                            "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic, 0.75 is a good starting value."
                                        },
                                        "penalty_alpha": {
                                            "type": "number",
                                            "title": "Penalty Alpha",
                                            "default": 0,
                                            "maximum": 1,
                                            "minimum": 0,
                                            "x-order": 6,
                                            "description": "When > 0 and top_k > 1, penalizes new tokens based on their similarity to previous tokens. Can help minimize repitition while maintaining semantic coherence. Set to 0 to disable."
                                        },
                                        "length_penalty": {
                                            "type": "number",
                                            "title": "Length Penalty",
                                            "default": 1,
                                            "maximum": 5,
                                            "minimum": 0.01,
                                            "x-order": 8,
                                            "description": "Increasing the length_penalty parameter above 1.0 will cause the model to favor longer sequences, while decreasing it below 1.0 will cause the model to favor shorter sequences."
                                        },
                                        "repetition_penalty": {
                                            "type": "number",
                                            "title": "Repetition Penalty",
                                            "default": 1,
                                            "maximum": 5,
                                            "minimum": 0.01,
                                            "x-order": 7,
                                            "description": "Penalty for repeated words in generated text; 1 is no penalty, values greater than 1 discourage repetition, less than 1 encourage it."
                                        },
                                        "no_repeat_ngram_size": {
                                            "type": "integer",
                                            "title": "No Repeat Ngram Size",
                                            "default": 0,
                                            "minimum": 0,
                                            "x-order": 9,
                                            "description": "If set to int > 0, all ngrams of size no_repeat_ngram_size can only occur once."
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Output",
                                    "x-cog-array-type": "iterator",
                                    "x-cog-array-display": "concatenate"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/X-PLUG/mPLUG-Owl/blob/main/LICENSE",
                "name": "mplug-owl",
                "owner": "joehoover",
                "paper_url": "https://arxiv.org/abs/2304.14178",
                "run_count": 48910,
                "url": "https://replicate.com/joehoover/mplug-owl",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/af717919-83de-46e8-9b1a-9c66f4f747bf/out_0.png",
                "created_at": "2023-05-16T19:05:24.691944Z",
                "default_example": {
                    "completed_at": "2023-05-17T23:27:47.968519Z",
                    "created_at": "2023-05-17T23:27:31.030303Z",
                    "error": null,
                    "id": "u6yurll6v5f6xjl2q47dudq3sy",
                    "input": {
                        "image": "https://replicate.delivery/pbxt/IqG1MbemhULihtfr62URRZbI29XtcPsnOYASrTDQ6u5oSqv9/llama_13b.png",
                        "top_p": 0.9,
                        "prompt": "This llama's name is Dave. Write me a story about how Dave found his skateboard.",
                        "num_beams": 5,
                        "max_length": 4000,
                        "temperature": 1.32,
                        "max_new_tokens": 3000,
                        "repetition_penalty": 1
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 16.967653
                    },
                    "output": "Dave the llama was feeling very bored one day. He had been wandering around the city for hours, but there was nothing interesting to do. Suddenly, he saw a skateboard lying on the ground. He decided to try it out, and as soon as he started riding it, he felt a rush of excitement. He rode around the city, enjoying the feeling of the wind in his hair and the freedom of being on his own. As he rode, he saw all sorts of interesting things that he had never noticed before. He even met some new friends along the way. After a while, Dave realized that he had found his true passion - skateboarding. From then on, he spent all his free time riding his skateboard and exploring the city.",
                    "started_at": "2023-05-17T23:27:31.000866Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/u6yurll6v5f6xjl2q47dudq3sy",
                        "cancel": "https://api.replicate.com/v1/predictions/u6yurll6v5f6xjl2q47dudq3sy/cancel"
                    },
                    "model": "daanelson/minigpt-4",
                    "version": "b96a2f33cc8e4b0aa23eacfce731b9c41a7d9466d9ed4e167375587b54db9423",
                    "webhook_completed": null
                },
                "description": "A model which generates text in response to an input image and prompt.",
                "github_url": "https://github.com/daanelson/MiniGPT-4",
                "latest_version": {
                    "id": "b96a2f33cc8e4b0aa23eacfce731b9c41a7d9466d9ed4e167375587b54db9423",
                    "created_at": "2023-05-16T22:51:57.306442Z",
                    "cog_version": "v0.7.0-beta17+dev",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "image",
                                        "prompt"
                                    ],
                                    "properties": {
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Image to discuss"
                                        },
                                        "top_p": {
                                            "type": "number",
                                            "title": "Top P",
                                            "default": 0.9,
                                            "maximum": 1,
                                            "minimum": 0,
                                            "x-order": 4,
                                            "description": "Sample from the top p percent most likely tokens"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "x-order": 1,
                                            "description": "Prompt for mini-gpt4 regarding input image"
                                        },
                                        "num_beams": {
                                            "type": "integer",
                                            "title": "Num Beams",
                                            "default": 3,
                                            "maximum": 10,
                                            "minimum": 1,
                                            "x-order": 2,
                                            "description": "Number of beams for beam search decoding"
                                        },
                                        "max_length": {
                                            "type": "integer",
                                            "title": "Max Length",
                                            "default": 4000,
                                            "minimum": 1,
                                            "x-order": 7,
                                            "description": "Total length of prompt and output in tokens"
                                        },
                                        "temperature": {
                                            "type": "number",
                                            "title": "Temperature",
                                            "default": 1,
                                            "maximum": 2,
                                            "minimum": 0.01,
                                            "x-order": 3,
                                            "description": "Temperature for generating tokens, lower = more predictable results"
                                        },
                                        "max_new_tokens": {
                                            "type": "integer",
                                            "title": "Max New Tokens",
                                            "default": 3000,
                                            "minimum": 1,
                                            "x-order": 6,
                                            "description": "Maximum number of new tokens to generate"
                                        },
                                        "repetition_penalty": {
                                            "type": "number",
                                            "title": "Repetition Penalty",
                                            "default": 1,
                                            "maximum": 5,
                                            "minimum": 0.01,
                                            "x-order": 5,
                                            "description": "Penalty for repeated words in generated text; 1 is no penalty, values greater than 1 discourage repetition, less than 1 encourage it."
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "string",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "output",
                                                "logs",
                                                "completed",
                                                "start"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/Vision-CAIR/MiniGPT-4/blob/main/LICENSE.md",
                "name": "minigpt-4",
                "owner": "daanelson",
                "paper_url": "https://arxiv.org/pdf/2304.10592.pdf",
                "run_count": 739029,
                "url": "https://replicate.com/daanelson/minigpt-4",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/Yd2zn7zhfM1kcSEPox8xdt9tejoaGc8nRypYBp6yJc49cGZRA/out.png",
                "created_at": "2023-08-06T21:33:44.464341Z",
                "default_example": {
                    "completed_at": "2023-08-11T22:25:02.632142Z",
                    "created_at": "2023-08-11T22:24:04.887354Z",
                    "error": null,
                    "id": "r3fqtzlbyqamkra6frjzl5sphe",
                    "input": {
                        "task_type": "Visual Grounding",
                        "input_image": "https://replicate.delivery/pbxt/JKlg8Ru5XgAnr03vzxqrP5V9ztpyfYuaNpUm0hVXs0XEKmu1/1.png",
                        "instruction": "detached banana"
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 2.318479
                    },
                    "output": {
                        "answer": null,
                        "output": "https://replicate.delivery/pbxt/Yd2zn7zhfM1kcSEPox8xdt9tejoaGc8nRypYBp6yJc49cGZRA/out.png"
                    },
                    "started_at": "2023-08-11T22:25:00.313663Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/r3fqtzlbyqamkra6frjzl5sphe",
                        "cancel": "https://api.replicate.com/v1/predictions/r3fqtzlbyqamkra6frjzl5sphe/cancel"
                    },
                    "model": "cjwbw/unival",
                    "version": "b2c886298b8f755c2d00de9af5c5e88081c7f48cd00ddd812e74ed208ca9ed20",
                    "webhook_completed": null
                },
                "description": "Unified Model for Image, Video, Audio and Language Tasks",
                "github_url": "https://github.com/chenxwh/unival",
                "latest_version": {
                    "id": "00a9af2b0889db2a73f5002b3a3000ba4eec8c5fed0cb4fd842a3fc75ab0e98f",
                    "created_at": "2023-08-11T23:30:53.193733Z",
                    "cog_version": "0.8.6",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root_get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictionsprediction_idput",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictionsprediction_id_cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "properties": {
                                        "task_type": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/task_type"
                                                }
                                            ],
                                            "default": "Image Captioning",
                                            "x-order": 3,
                                            "description": "Choose a task."
                                        },
                                        "input_audio": {
                                            "type": "string",
                                            "title": "Input Audio",
                                            "format": "uri",
                                            "x-order": 1,
                                            "description": "Input audio."
                                        },
                                        "input_image": {
                                            "type": "string",
                                            "title": "Input Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image."
                                        },
                                        "input_video": {
                                            "type": "string",
                                            "title": "Input Video",
                                            "format": "uri",
                                            "x-order": 2,
                                            "description": "Input video."
                                        },
                                        "instruction": {
                                            "type": "string",
                                            "title": "Instruction",
                                            "x-order": 4,
                                            "description": "Provide question for the VQA task, region for Visual Grounding task, and instruction for General tasks. The default instruction for Captioning task is ‘What does the image/video/audio describe?’"
                                        }
                                    }
                                },
                                "Output": {
                                    "$ref": "#/components/schemas/ModelOutput"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "task_type": {
                                    "enum": [
                                        "Image Captioning",
                                        "Video Captioning",
                                        "Audio Captioning",
                                        "Visual Grounding",
                                        "General",
                                        "General Video"
                                    ],
                                    "type": "string",
                                    "title": "task_type",
                                    "description": "An enumeration."
                                },
                                "ModelOutput": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string",
                                            "title": "Answer"
                                        },
                                        "output": {
                                            "type": "string",
                                            "title": "Output",
                                            "format": "uri"
                                        }
                                    }
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ]
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/mshukor/UnIVAL/blob/main/LICENSE",
                "name": "unival",
                "owner": "cjwbw",
                "paper_url": "https://arxiv.org/abs/2307.16184",
                "run_count": 620,
                "url": "https://replicate.com/cjwbw/unival",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/7cd09060-b91e-4261-a03e-ed772aa2e044/qwen.jpg",
                "created_at": "2023-09-03T22:54:53.973750Z",
                "default_example": {
                    "completed_at": "2023-10-15T03:42:23.657069Z",
                    "created_at": "2023-10-15T03:37:52.522283Z",
                    "error": null,
                    "id": "hkeljvlbsmzjhsuoxqupubwi44",
                    "input": {
                        "image": "https://replicate.delivery/pbxt/JSwt0WCMKtolbjYYo6WYIE01Iemz3etQD6ugKxxeiVVlMgjF/Menu.jpeg",
                        "prompt": "How much would I pay if I want to order two Salmon Burger and three Meat Lover\\'s Pizza? Think carefully step by step."
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 6.278623
                    },
                    "output": "If you want to order two Salmon Burgers and three Meat Lover's Pizzas, the total cost would depend on the price of each item on the menu. \n\nLet's assume that the price of a Salmon Burger is $10 and the price of a Meat Lover's Pizza is $12. In this case, the total cost for two Salmon Burgers would be $20 and the total cost for three Meat Lover's Pizzas would be $36.\n\nSo, the total cost for two Salmon Burgers and three Meat Lover's Pizzas would be $56 ($20 for two Salmon Burgers + $36 for three Meat Lover's Pizzas).",
                    "started_at": "2023-10-15T03:42:17.378446Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/hkeljvlbsmzjhsuoxqupubwi44",
                        "cancel": "https://api.replicate.com/v1/predictions/hkeljvlbsmzjhsuoxqupubwi44/cancel"
                    },
                    "model": "lucataco/qwen-vl-chat",
                    "version": "50881b153b4d5f72b3db697e2bbad23bb1277ab741c5b52d80cd6ee17ea660e9",
                    "webhook_completed": null
                },
                "description": "A multimodal LLM-based AI assistant, which is trained with alignment techniques. Qwen-VL-Chat supports more flexible interaction, such as multi-round question answering, and creative capabilities.",
                "github_url": "https://github.com/lucataco/cog-qwen-vl-chat",
                "latest_version": {
                    "id": "50881b153b4d5f72b3db697e2bbad23bb1277ab741c5b52d80cd6ee17ea660e9",
                    "created_at": "2023-10-15T03:37:42.989695Z",
                    "cog_version": "0.8.6",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "image"
                                    ],
                                    "properties": {
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "default": "What is the name of the movie in the poster?",
                                            "x-order": 1,
                                            "description": "Question"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "string",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ]
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": null,
                "name": "qwen-vl-chat",
                "owner": "lucataco",
                "paper_url": "https://huggingface.co/papers/2308.12966",
                "run_count": 15985,
                "url": "https://replicate.com/lucataco/qwen-vl-chat",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/JZLrEi8rmF5aqLeg0iney67r2dPhCcGudYNedSLuHa0chpqk/image%20(1).png",
                "created_at": "2023-09-21T09:25:10.012352Z",
                "default_example": {
                    "completed_at": "2023-09-22T00:29:26.347113Z",
                    "created_at": "2023-09-22T00:27:06.671247Z",
                    "error": null,
                    "id": "b5lxfrdb2phinvuypsqm34mwua",
                    "input": {
                        "text": "Explain this image to me.",
                        "image": "https://replicate.delivery/pbxt/JZLrEi8rmF5aqLeg0iney67r2dPhCcGudYNedSLuHa0chpqk/image%20(1).png",
                        "top_p": 0.8,
                        "temperature": 0.4,
                        "max_new_tokens": 512,
                        "decoding_strategy": "Greedy",
                        "repetition_penalty": 1
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 3.876006
                    },
                    "output": "The image features a cartoon cat with a caption that says \"I like French people they eat pain.\" The cat appears to be grumpy or annoyed, which adds to the humor of the statement.",
                    "started_at": "2023-09-22T00:29:22.471107Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/b5lxfrdb2phinvuypsqm34mwua",
                        "cancel": "https://api.replicate.com/v1/predictions/b5lxfrdb2phinvuypsqm34mwua/cancel"
                    },
                    "model": "cjwbw/idefics",
                    "version": "e2dc66037a459b52f92a547e4b98859a4e0ebb7310ed27e99ea1bfe2f7d3672a",
                    "webhook_completed": null
                },
                "description": "Open-access reproduction of large visual language model Flamingo",
                "github_url": "https://github.com/chenxwh/cog-idefics",
                "latest_version": {
                    "id": "e2dc66037a459b52f92a547e4b98859a4e0ebb7310ed27e99ea1bfe2f7d3672a",
                    "created_at": "2023-09-22T00:25:36.240369Z",
                    "cog_version": "0.8.3",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "image",
                                        "text"
                                    ],
                                    "properties": {
                                        "text": {
                                            "type": "string",
                                            "title": "Text",
                                            "x-order": 1,
                                            "description": "Input text"
                                        },
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image"
                                        },
                                        "top_p": {
                                            "type": "number",
                                            "title": "Top P",
                                            "default": 0.8,
                                            "maximum": 0.99,
                                            "minimum": 0.01,
                                            "x-order": 6,
                                            "description": "Valid for Top P Sampling. Higher values is equivalent to sampling more low-probability tokens."
                                        },
                                        "temperature": {
                                            "type": "number",
                                            "title": "Temperature",
                                            "default": 0.4,
                                            "maximum": 5,
                                            "minimum": 0,
                                            "x-order": 5,
                                            "description": "Sampling temperature. Valid for Top P Sampling. Higher values will produce more diverse outputs."
                                        },
                                        "max_new_tokens": {
                                            "type": "integer",
                                            "title": "Max New Tokens",
                                            "default": 512,
                                            "maximum": 1024,
                                            "minimum": 8,
                                            "x-order": 2,
                                            "description": "Maximum number of new tokens to generate."
                                        },
                                        "decoding_strategy": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/decoding_strategy"
                                                }
                                            ],
                                            "default": "Greedy",
                                            "x-order": 4,
                                            "description": "Choose the decoding strategy."
                                        },
                                        "repetition_penalty": {
                                            "type": "number",
                                            "title": "Repetition Penalty",
                                            "default": 1,
                                            "maximum": 5,
                                            "minimum": 0.01,
                                            "x-order": 3,
                                            "description": "Repetition penalty, 1.0 is equivalent to no penalty"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "string",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "completed",
                                                "start",
                                                "output",
                                                "logs"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "decoding_strategy": {
                                    "enum": [
                                        "Greedy",
                                        "Top P Sampling"
                                    ],
                                    "type": "string",
                                    "title": "decoding_strategy",
                                    "description": "An enumeration."
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": null,
                "name": "idefics",
                "owner": "cjwbw",
                "paper_url": null,
                "run_count": 688,
                "url": "https://replicate.com/cjwbw/idefics",
                "visibility": "public"
            },
            {
                "cover_image_url": null,
                "created_at": "2023-09-21T15:28:59.911256Z",
                "default_example": {
                    "completed_at": "2023-09-27T16:24:31.144845Z",
                    "created_at": "2023-09-27T16:22:07.213657Z",
                    "error": null,
                    "id": "pzvg6udbb2bqbmxpbozi6tsi34",
                    "input": {
                        "document": "https://replicate.delivery/pbxt/JbMUOcGjsnHOnQlLDA6dPwxH9StGCDhIS3AOEomBYdYvqDb9/sample2.pdf",
                        "postprocess": false,
                        "early_stopping": false
                    },
                    "logs": "0%|          | 0/1 [00:00<?, ?it/s][nltk_data] Downloading package words to /root/nltk_data...\n[nltk_data]   Unzipping corpora/words.zip.\nProcessing file /tmp/tmpui_a8edwsample2.pdf with 4 pages\n100%|██████████| 1/1 [00:24<00:00, 24.52s/it]\n100%|██████████| 1/1 [00:24<00:00, 24.52s/it]",
                    "metrics": {
                        "predict_time": 25.952627
                    },
                    "output": "https://pbxt.replicate.delivery/PHmHkYx0RZYhL1t4yzCIpm6S1KNRiQL3KO83GdmFl4kPJIaE/output.txt",
                    "started_at": "2023-09-27T16:24:05.192218Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/pzvg6udbb2bqbmxpbozi6tsi34",
                        "cancel": "https://api.replicate.com/v1/predictions/pzvg6udbb2bqbmxpbozi6tsi34/cancel"
                    },
                    "model": "alaradirik/nougat",
                    "version": "0e5c17e048aadc94800ba280eebced3b86c83f4679a723671a18d96f8f2d6fc5",
                    "webhook_completed": null
                },
                "description": "Nougat: Neural Optical Understanding for Academic Documents",
                "github_url": "https://github.com/replicate/cog-nougat",
                "latest_version": {
                    "id": "fbf959aabb306f7cc83e31da4a5ee0ee78406d11216295dbd9ef75aba9b30538",
                    "created_at": "2023-09-29T10:49:19.576130Z",
                    "cog_version": "0.8.3",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "document"
                                    ],
                                    "properties": {
                                        "document": {
                                            "type": "string",
                                            "title": "Document",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Scanned PDF or image file to convert"
                                        },
                                        "postprocess": {
                                            "type": "boolean",
                                            "title": "Postprocess",
                                            "default": false,
                                            "x-order": 2,
                                            "description": "Apply additional postprocessing steps for full markdown compatibility"
                                        },
                                        "early_stopping": {
                                            "type": "boolean",
                                            "title": "Early Stopping",
                                            "default": false,
                                            "x-order": 1,
                                            "description": "Enable early stopping for faster inference"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "string",
                                    "title": "Output",
                                    "format": "uri"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "completed",
                                                "logs",
                                                "start",
                                                "output"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://raw.githubusercontent.com/facebookresearch/nougat/main/LICENSE-MODEL.md",
                "name": "nougat",
                "owner": "alaradirik",
                "paper_url": "https://arxiv.org/abs/2308.13418",
                "run_count": 918,
                "url": "https://replicate.com/alaradirik/nougat",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/JcqDxAZJWep7WsZdWM0gc6Ead2ie0YDEXyemc9HXogSdpsOM/out-0%20(1).png",
                "created_at": "2023-10-01T18:50:33.035231Z",
                "default_example": {
                    "completed_at": "2023-10-01T20:24:45.424113Z",
                    "created_at": "2023-10-01T20:24:35.494781Z",
                    "error": null,
                    "id": "7s4rnulbxfzswyq2cc6n223fwi",
                    "input": {
                        "text": "What makes this image special?",
                        "image": "https://replicate.delivery/pbxt/JcqDxAZJWep7WsZdWM0gc6Ead2ie0YDEXyemc9HXogSdpsOM/out-0%20(1).png"
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 9.940584
                    },
                    "output": "This image is special because it depicts an astronaut sitting in a chair surrounded by psychedelic mushrooms. The astronaut is wearing an orange spacesuit, which adds to the surreal and dreamlike atmosphere of the scene. The combination of the astronaut and the psychedelic mushrooms creates a unique and captivating composition.\n",
                    "started_at": "2023-10-01T20:24:35.483529Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/7s4rnulbxfzswyq2cc6n223fwi",
                        "cancel": "https://api.replicate.com/v1/predictions/7s4rnulbxfzswyq2cc6n223fwi/cancel"
                    },
                    "model": "cjwbw/internlm-xcomposer",
                    "version": "d16df299dbe3454023fcb47ed48dbff052e9b7cdf2837707adff3581edd11e95",
                    "webhook_completed": null
                },
                "description": "Advanced text-image comprehension and composition based on InternLM",
                "github_url": "https://github.com/chenxwh/InternLM-XComposer",
                "latest_version": {
                    "id": "d16df299dbe3454023fcb47ed48dbff052e9b7cdf2837707adff3581edd11e95",
                    "created_at": "2023-10-01T19:42:22.670936Z",
                    "cog_version": "0.8.3",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "text"
                                    ],
                                    "properties": {
                                        "text": {
                                            "type": "string",
                                            "title": "Text",
                                            "x-order": 1,
                                            "description": "Input text."
                                        },
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image."
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "string",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "logs",
                                                "output",
                                                "completed"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://huggingface.co/models?license=license%3Aapache-2.0",
                "name": "internlm-xcomposer",
                "owner": "cjwbw",
                "paper_url": "https://arxiv.org/pdf/2309.15112.pdf",
                "run_count": 162932,
                "url": "https://replicate.com/cjwbw/internlm-xcomposer",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/2c5dbfff-209d-4ab5-a294-b3e5e56105c0/dalle3.jpg",
                "created_at": "2023-10-09T16:27:51.777748Z",
                "default_example": {
                    "completed_at": "2023-10-10T12:43:58.049663Z",
                    "created_at": "2023-10-10T12:39:54.406394Z",
                    "error": null,
                    "id": "gav7xf3bxlcjrql3iyidcu7qgu",
                    "input": {
                        "image": "https://replicate.delivery/pbxt/JfvBi04QfleIeJ3ASiBEMbJvhTQKWKLjKaajEbuhO1Y0wPHd/view.jpg",
                        "prompt": "Are you allowed to swim here?",
                        "max_tokens": 1024,
                        "temperature": 0.2
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 2.31179
                    },
                    "output": "Yes, you are allowed to swim in the lake near the pier.",
                    "started_at": "2023-10-10T12:43:55.737873Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/gav7xf3bxlcjrql3iyidcu7qgu",
                        "cancel": "https://api.replicate.com/v1/predictions/gav7xf3bxlcjrql3iyidcu7qgu/cancel"
                    },
                    "model": "yorickvp/llava-13b",
                    "version": "c293ca6d551ce5e74893ab153c61380f5bcbd80e02d49e08c582de184a8f6c83",
                    "webhook_completed": null
                },
                "description": "Visual instruction tuning towards large language and vision models with GPT-4 level capabilities",
                "github_url": "https://github.com/haotian-liu/LLaVA",
                "latest_version": {
                    "id": "e272157381e2a3bf12df3a8edd1f38d1dbd736bbb7437277c8b34175f8fce358",
                    "created_at": "2023-11-21T10:19:14.945570Z",
                    "cog_version": "0.9.0-beta10",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "image",
                                        "prompt"
                                    ],
                                    "properties": {
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image"
                                        },
                                        "top_p": {
                                            "type": "number",
                                            "title": "Top P",
                                            "default": 1,
                                            "maximum": 1,
                                            "minimum": 0,
                                            "x-order": 2,
                                            "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "x-order": 1,
                                            "description": "Prompt to use for text generation"
                                        },
                                        "max_tokens": {
                                            "type": "integer",
                                            "title": "Max Tokens",
                                            "default": 1024,
                                            "minimum": 0,
                                            "x-order": 4,
                                            "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens"
                                        },
                                        "temperature": {
                                            "type": "number",
                                            "title": "Temperature",
                                            "default": 0.2,
                                            "minimum": 0,
                                            "x-order": 3,
                                            "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Output",
                                    "x-cog-array-type": "iterator",
                                    "x-cog-array-display": "concatenate"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ]
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://ai.meta.com/llama/license/",
                "name": "llava-13b",
                "owner": "yorickvp",
                "paper_url": "https://arxiv.org/abs/2310.03744",
                "run_count": 2449171,
                "url": "https://replicate.com/yorickvp/llava-13b",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/oO5rHoHwsrYGJh5HeElqpBBmjoi1gkXxGofpiQuxMvDNlduRA/result.png",
                "created_at": "2023-10-13T06:38:49.512402Z",
                "default_example": {
                    "completed_at": "2023-10-15T17:54:22.524691Z",
                    "created_at": "2023-10-15T17:50:51.320269Z",
                    "error": null,
                    "id": "2viboyrc3hn5eelepidmqfzm6i",
                    "input": {
                        "image": "https://replicate.delivery/pbxt/JhlycB8ScNVrMu0ke1Xlg09ajbsmMfp4TK19JXpnYq6GrHK8/astronaut.png",
                        "query": "human face, rocket, star-spangled banner, nasa badge",
                        "threshold": 0.11,
                        "show_visualisation": true
                    },
                    "logs": "human face, rocket, star-spangled banner, nasa badge True\n/root/.pyenv/versions/3.9.18/lib/python3.9/site-packages/transformers/models/owlvit/image_processing_owlvit.py:429: FutureWarning: `post_process` is deprecated and will be removed in v5 of Transformers, please use `post_process_object_detection` instead, with `threshold=0.` for equivalent results.\nwarnings.warn(",
                    "metrics": {
                        "predict_time": 5.496842
                    },
                    "output": {
                        "json_data": {
                            "objects": [
                                {
                                    "bbox": [
                                        180,
                                        71,
                                        271,
                                        178
                                    ],
                                    "label": "human face",
                                    "confidence": 0.35713595151901245
                                },
                                {
                                    "bbox": [
                                        1,
                                        1,
                                        105,
                                        509
                                    ],
                                    "label": "star-spangled banner",
                                    "confidence": 0.13790424168109894
                                },
                                {
                                    "bbox": [
                                        350,
                                        -1,
                                        468,
                                        288
                                    ],
                                    "label": "rocket",
                                    "confidence": 0.2110234647989273
                                },
                                {
                                    "bbox": [
                                        129,
                                        348,
                                        206,
                                        427
                                    ],
                                    "label": "nasa badge",
                                    "confidence": 0.28099769353866577
                                },
                                {
                                    "bbox": [
                                        277,
                                        338,
                                        327,
                                        380
                                    ],
                                    "label": "nasa badge",
                                    "confidence": 0.1195005401968956
                                }
                            ]
                        },
                        "result_image": "https://replicate.delivery/pbxt/oO5rHoHwsrYGJh5HeElqpBBmjoi1gkXxGofpiQuxMvDNlduRA/result.png"
                    },
                    "started_at": "2023-10-15T17:54:17.027849Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/2viboyrc3hn5eelepidmqfzm6i",
                        "cancel": "https://api.replicate.com/v1/predictions/2viboyrc3hn5eelepidmqfzm6i/cancel"
                    },
                    "model": "alaradirik/owlvit-base-patch32",
                    "version": "5e899f155a1913c4b7304d09082d842ca7fe6cb1f22e066c83eb1d7849dc37c2",
                    "webhook_completed": null
                },
                "description": "Zero-shot / open vocabulary object detection",
                "github_url": "https://github.com/google-research/scenic/tree/main/scenic/projects/owl_vit",
                "latest_version": {
                    "id": "5e899f155a1913c4b7304d09082d842ca7fe6cb1f22e066c83eb1d7849dc37c2",
                    "created_at": "2023-10-13T14:35:09.611305Z",
                    "cog_version": "0.8.3",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "properties": {
                                        "image": {
                                            "type": "string",
                                            "title": "Image",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "Input image to query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "title": "Query",
                                            "x-order": 1,
                                            "description": "Comma seperated names of the objects to be detected in the image"
                                        },
                                        "threshold": {
                                            "type": "number",
                                            "title": "Threshold",
                                            "default": 0.1,
                                            "maximum": 1,
                                            "minimum": 0,
                                            "x-order": 2,
                                            "description": "Confidence level for object detection"
                                        },
                                        "show_visualisation": {
                                            "type": "boolean",
                                            "title": "Show Visualisation",
                                            "default": true,
                                            "x-order": 3,
                                            "description": "Draw and visualize bounding boxes on the image"
                                        }
                                    }
                                },
                                "Output": {
                                    "$ref": "#/components/schemas/ModelOutput",
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "ModelOutput": {
                                    "type": "object",
                                    "title": "ModelOutput",
                                    "required": [
                                        "json_data"
                                    ],
                                    "properties": {
                                        "json_data": {
                                            "type": "object",
                                            "title": "Json Data"
                                        },
                                        "result_image": {
                                            "type": "string",
                                            "title": "Result Image",
                                            "format": "uri"
                                        }
                                    }
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "completed",
                                                "logs"
                                            ],
                                            "uniqueItems": true
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/google-research/scenic/blob/main/LICENSE",
                "name": "owlvit-base-patch32",
                "owner": "alaradirik",
                "paper_url": "https://arxiv.org/abs/2205.06230",
                "run_count": 5370,
                "url": "https://replicate.com/alaradirik/owlvit-base-patch32",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/aYXKkkuCWM6WN96DfeKBlVFTle875XmLLmMkJFp7rkNryqfHB/0.png",
                "created_at": "2023-11-24T07:36:10.941285Z",
                "default_example": {
                    "completed_at": "2023-12-07T10:54:14.387750Z",
                    "created_at": "2023-12-07T10:54:09.748467Z",
                    "error": null,
                    "id": "po7r5j3beyfcgdqc34vg7fmcvi",
                    "input": {
                        "seed": 20,
                        "image1": "https://replicate.delivery/pbxt/K0Tzk2bsc76SSsRgrJSoh0fnzrB5M0Dqeqe7YHLxf1x7fU4S/FELV-cat.jpg",
                        "image2": "https://replicate.delivery/pbxt/K0TzkJl3lco0aPVIg8iQYUB0ursK7ZWO0ECEVsxMMQlf5eKH/ironman.jpg",
                        "prompt": "<i> in the suit of <i>",
                        "num_images": 1,
                        "negative_prompt": "",
                        "num_inference_steps": 50,
                        "text_guidance_scale": 6
                    },
                    "logs": null,
                    "metrics": {
                        "predict_time": 4.575008
                    },
                    "output": [
                        "https://replicate.delivery/pbxt/aYXKkkuCWM6WN96DfeKBlVFTle875XmLLmMkJFp7rkNryqfHB/0.png"
                    ],
                    "started_at": "2023-12-07T10:54:09.812742Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/po7r5j3beyfcgdqc34vg7fmcvi",
                        "cancel": "https://api.replicate.com/v1/predictions/po7r5j3beyfcgdqc34vg7fmcvi/cancel"
                    },
                    "model": "adirik/kosmos-g",
                    "version": "56f9fde586eeecfd03c9c34da1c40f5e513af2d511d4b1961f810df1334cc6e9",
                    "webhook_completed": null
                },
                "description": "Kosmos-G: Generating Images in Context with Multimodal Large Language Models",
                "github_url": "https://github.com/microsoft/unilm/tree/master/kosmos-g",
                "latest_version": {
                    "id": "56f9fde586eeecfd03c9c34da1c40f5e513af2d511d4b1961f810df1334cc6e9",
                    "created_at": "2023-12-07T10:37:24.162920Z",
                    "cog_version": "0.9.0-beta10",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "image1"
                                    ],
                                    "properties": {
                                        "seed": {
                                            "type": "integer",
                                            "title": "Seed",
                                            "x-order": 7,
                                            "description": "Seed for reproducibility"
                                        },
                                        "image1": {
                                            "type": "string",
                                            "title": "Image1",
                                            "format": "uri",
                                            "x-order": 0,
                                            "description": "First input image"
                                        },
                                        "image2": {
                                            "type": "string",
                                            "title": "Image2",
                                            "format": "uri",
                                            "x-order": 1,
                                            "description": "Optional second input image"
                                        },
                                        "prompt": {
                                            "type": "string",
                                            "title": "Prompt",
                                            "default": "<i>",
                                            "x-order": 2,
                                            "description": "Target prompt, use <i> to represent the images in prompt"
                                        },
                                        "num_images": {
                                            "type": "integer",
                                            "title": "Num Images",
                                            "default": 4,
                                            "maximum": 4,
                                            "minimum": 1,
                                            "x-order": 6,
                                            "description": "Number of images to generate"
                                        },
                                        "negative_prompt": {
                                            "type": "string",
                                            "title": "Negative Prompt",
                                            "default": "",
                                            "x-order": 3,
                                            "description": "Negative prompt"
                                        },
                                        "num_inference_steps": {
                                            "type": "integer",
                                            "title": "Num Inference Steps",
                                            "default": 50,
                                            "maximum": 100,
                                            "minimum": 10,
                                            "x-order": 5,
                                            "description": "Number of inference steps"
                                        },
                                        "text_guidance_scale": {
                                            "type": "number",
                                            "title": "Text Guidance Scale",
                                            "default": 6,
                                            "maximum": 15,
                                            "minimum": 1,
                                            "x-order": 4,
                                            "description": "Text guidance scale"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ]
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/microsoft/unilm/blob/master/LICENSE",
                "name": "kosmos-g",
                "owner": "adirik",
                "paper_url": "https://arxiv.org/abs/2310.02992",
                "run_count": 840,
                "url": "https://replicate.com/adirik/kosmos-g",
                "visibility": "public"
            },
            {
                "cover_image_url": "https://replicate.delivery/pbxt/09z14i0H7QZhDtBvCnC1WtH05GpU60ZEliQ3ZNRW4WqEf9fRA/output1.png",
                "created_at": "2023-12-07T15:15:21.882370Z",
                "default_example": {
                    "completed_at": "2023-12-07T18:21:06.473892Z",
                    "created_at": "2023-12-07T18:16:31.179989Z",
                    "error": null,
                    "id": "4qxd653bq7xysqhaonrxba2dye",
                    "input": {
                        "prompt1": "A portrait of an old man, facing camera, best quality",
                        "prompt2": "A portrait of an old man, facing camera, best quality, smiling",
                        "guidance_scale": 7.5,
                        "masactrl_start_step": 4,
                        "num_inference_steps": 50,
                        "masactrl_start_layer": 44
                    },
                    "logs": "/root/.pyenv/versions/3.11.6/lib/python3.11/site-packages/lightning_fabric/utilities/seed.py:40: No seed found, seed set to 4035447542\nSeed set to 4035447542\nMasaCtrl at denoising steps:  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\nMasaCtrl at U-Net layers:  [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]\n  0%|          | 0/50 [00:00<?, ?it/s]\n  2%|▏         | 1/50 [00:01<00:53,  1.09s/it]\n  4%|▍         | 2/50 [00:01<00:38,  1.25it/s]\n  6%|▌         | 3/50 [00:02<00:33,  1.41it/s]\n  8%|▊         | 4/50 [00:02<00:30,  1.51it/s]\n 10%|█         | 5/50 [00:03<00:30,  1.47it/s]\n 12%|█▏        | 6/50 [00:04<00:30,  1.45it/s]\n 14%|█▍        | 7/50 [00:04<00:29,  1.44it/s]\n 16%|█▌        | 8/50 [00:05<00:29,  1.43it/s]\n 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]\n 20%|██        | 10/50 [00:07<00:28,  1.42it/s]\n 22%|██▏       | 11/50 [00:07<00:27,  1.42it/s]\n 24%|██▍       | 12/50 [00:08<00:26,  1.42it/s]\n 26%|██▌       | 13/50 [00:09<00:26,  1.42it/s]\n 28%|██▊       | 14/50 [00:09<00:25,  1.42it/s]\n 30%|███       | 15/50 [00:10<00:24,  1.41it/s]\n 32%|███▏      | 16/50 [00:11<00:24,  1.41it/s]\n 34%|███▍      | 17/50 [00:12<00:23,  1.41it/s]\n 36%|███▌      | 18/50 [00:12<00:22,  1.41it/s]\n 38%|███▊      | 19/50 [00:13<00:21,  1.41it/s]\n 40%|████      | 20/50 [00:14<00:21,  1.41it/s]\n 42%|████▏     | 21/50 [00:14<00:20,  1.41it/s]\n 44%|████▍     | 22/50 [00:15<00:19,  1.42it/s]\n 46%|████▌     | 23/50 [00:16<00:19,  1.42it/s]\n 48%|████▊     | 24/50 [00:17<00:18,  1.42it/s]\n 50%|█████     | 25/50 [00:17<00:17,  1.42it/s]\n 52%|█████▏    | 26/50 [00:18<00:16,  1.42it/s]\n 54%|█████▍    | 27/50 [00:19<00:16,  1.42it/s]\n 56%|█████▌    | 28/50 [00:19<00:15,  1.42it/s]\n 58%|█████▊    | 29/50 [00:20<00:14,  1.42it/s]\n 60%|██████    | 30/50 [00:21<00:14,  1.42it/s]\n 62%|██████▏   | 31/50 [00:21<00:13,  1.42it/s]\n 64%|██████▍   | 32/50 [00:22<00:12,  1.42it/s]\n 66%|██████▌   | 33/50 [00:23<00:12,  1.42it/s]\n 68%|██████▊   | 34/50 [00:24<00:11,  1.42it/s]\n 70%|███████   | 35/50 [00:24<00:10,  1.42it/s]\n 72%|███████▏  | 36/50 [00:25<00:09,  1.42it/s]\n 74%|███████▍  | 37/50 [00:26<00:09,  1.42it/s]\n 76%|███████▌  | 38/50 [00:26<00:08,  1.41it/s]\n 78%|███████▊  | 39/50 [00:27<00:07,  1.41it/s]\n 80%|████████  | 40/50 [00:28<00:07,  1.41it/s]\n 82%|████████▏ | 41/50 [00:29<00:06,  1.41it/s]\n 84%|████████▍ | 42/50 [00:29<00:05,  1.41it/s]\n 86%|████████▌ | 43/50 [00:30<00:04,  1.41it/s]\n 88%|████████▊ | 44/50 [00:31<00:04,  1.41it/s]\n 90%|█████████ | 45/50 [00:31<00:03,  1.41it/s]\n 92%|█████████▏| 46/50 [00:32<00:02,  1.41it/s]\n 94%|█████████▍| 47/50 [00:33<00:02,  1.41it/s]\n 96%|█████████▌| 48/50 [00:33<00:01,  1.41it/s]\n 98%|█████████▊| 49/50 [00:34<00:00,  1.41it/s]\n100%|██████████| 50/50 [00:35<00:00,  1.41it/s]\n100%|██████████| 50/50 [00:35<00:00,  1.41it/s]",
                    "metrics": {
                        "predict_time": 39.612688
                    },
                    "output": [
                        "https://replicate.delivery/pbxt/WgkUBmQLbkqnFtoe6sCBFBjRNc8m034yKr3wfffOWzTCxvfPC/output0.png",
                        "https://replicate.delivery/pbxt/09z14i0H7QZhDtBvCnC1WtH05GpU60ZEliQ3ZNRW4WqEf9fRA/output1.png"
                    ],
                    "started_at": "2023-12-07T18:20:26.861204Z",
                    "status": "succeeded",
                    "urls": {
                        "get": "https://api.replicate.com/v1/predictions/4qxd653bq7xysqhaonrxba2dye",
                        "cancel": "https://api.replicate.com/v1/predictions/4qxd653bq7xysqhaonrxba2dye/cancel"
                    },
                    "model": "adirik/masactrl-sdxl",
                    "version": "cb949d990cba61f0ecc242912f4305b1780e552f239d21930f4eb24e713bb599",
                    "webhook_completed": null
                },
                "description": "Editable image generation with MasaCtrl-SDXL",
                "github_url": "https://github.com/TencentARC/MasaCtrl",
                "latest_version": {
                    "id": "cb949d990cba61f0ecc242912f4305b1780e552f239d21930f4eb24e713bb599",
                    "created_at": "2023-12-07T15:47:17.112758Z",
                    "cog_version": "0.9.0-beta10",
                    "openapi_schema": {
                        "info": {
                            "title": "Cog",
                            "version": "0.1.0"
                        },
                        "paths": {
                            "/": {
                                "get": {
                                    "summary": "Root",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Root  Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "root__get"
                                }
                            },
                            "/shutdown": {
                                "post": {
                                    "summary": "Start Shutdown",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Start Shutdown Shutdown Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "start_shutdown_shutdown_post"
                                }
                            },
                            "/predictions": {
                                "post": {
                                    "summary": "Predict",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model",
                                    "operationId": "predict_predictions_post",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/PredictionRequest"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/health-check": {
                                "get": {
                                    "summary": "Healthcheck",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Healthcheck Health Check Get"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        }
                                    },
                                    "operationId": "healthcheck_health_check_get"
                                }
                            },
                            "/predictions/{prediction_id}": {
                                "put": {
                                    "summary": "Predict Idempotent",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/PredictionResponse"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        },
                                        {
                                            "in": "header",
                                            "name": "prefer",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prefer"
                                            },
                                            "required": false
                                        }
                                    ],
                                    "description": "Run a single prediction on the model (idempotent creation).",
                                    "operationId": "predict_idempotent_predictions__prediction_id__put",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/PredictionRequest"
                                                        }
                                                    ],
                                                    "title": "Prediction Request"
                                                }
                                            }
                                        },
                                        "required": true
                                    }
                                }
                            },
                            "/predictions/{prediction_id}/cancel": {
                                "post": {
                                    "summary": "Cancel",
                                    "responses": {
                                        "200": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                                    }
                                                }
                                            },
                                            "description": "Successful Response"
                                        },
                                        "422": {
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "$ref": "#/components/schemas/HTTPValidationError"
                                                    }
                                                }
                                            },
                                            "description": "Validation Error"
                                        }
                                    },
                                    "parameters": [
                                        {
                                            "in": "path",
                                            "name": "prediction_id",
                                            "schema": {
                                                "type": "string",
                                                "title": "Prediction ID"
                                            },
                                            "required": true
                                        }
                                    ],
                                    "description": "Cancel a running prediction",
                                    "operationId": "cancel_predictions__prediction_id__cancel_post"
                                }
                            }
                        },
                        "openapi": "3.0.2",
                        "components": {
                            "schemas": {
                                "Input": {
                                    "type": "object",
                                    "title": "Input",
                                    "required": [
                                        "prompt1",
                                        "prompt2"
                                    ],
                                    "properties": {
                                        "seed": {
                                            "type": "integer",
                                            "title": "Seed",
                                            "x-order": 8,
                                            "description": "Random seed.A random seed will be used if not provided."
                                        },
                                        "prompt1": {
                                            "type": "string",
                                            "title": "Prompt1",
                                            "x-order": 0,
                                            "description": "Prompt for the first image"
                                        },
                                        "prompt2": {
                                            "type": "string",
                                            "title": "Prompt2",
                                            "x-order": 1,
                                            "description": "Prompt for the second image"
                                        },
                                        "prompt3": {
                                            "type": "string",
                                            "title": "Prompt3",
                                            "x-order": 2,
                                            "description": "Prompt for the third image"
                                        },
                                        "prompt4": {
                                            "type": "string",
                                            "title": "Prompt4",
                                            "x-order": 3,
                                            "description": "Prompt for the forth image"
                                        },
                                        "guidance_scale": {
                                            "type": "number",
                                            "title": "Guidance Scale",
                                            "default": 7.5,
                                            "maximum": 50,
                                            "minimum": 1,
                                            "x-order": 4,
                                            "description": "Scale for classifier-free guidance"
                                        },
                                        "masactrl_start_step": {
                                            "type": "integer",
                                            "title": "Masactrl Start Step",
                                            "default": 4,
                                            "maximum": 100,
                                            "minimum": 1,
                                            "x-order": 6,
                                            "description": "The step to start mutual self-attention control.                 It should be lower than num_inference_steps"
                                        },
                                        "num_inference_steps": {
                                            "type": "integer",
                                            "title": "Num Inference Steps",
                                            "default": 50,
                                            "maximum": 100,
                                            "minimum": 1,
                                            "x-order": 5,
                                            "description": "Number of denoising steps"
                                        },
                                        "masactrl_start_layer": {
                                            "type": "integer",
                                            "title": "Masactrl Start Layer",
                                            "default": 44,
                                            "maximum": 70,
                                            "minimum": 1,
                                            "x-order": 7,
                                            "description": "The layer to start mutual self-attention control"
                                        }
                                    }
                                },
                                "Output": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": "Output"
                                },
                                "Status": {
                                    "enum": [
                                        "starting",
                                        "processing",
                                        "succeeded",
                                        "canceled",
                                        "failed"
                                    ],
                                    "type": "string",
                                    "title": "Status",
                                    "description": "An enumeration."
                                },
                                "WebhookEvent": {
                                    "enum": [
                                        "start",
                                        "output",
                                        "logs",
                                        "completed"
                                    ],
                                    "type": "string",
                                    "title": "WebhookEvent",
                                    "description": "An enumeration."
                                },
                                "ValidationError": {
                                    "type": "object",
                                    "title": "ValidationError",
                                    "required": [
                                        "loc",
                                        "msg",
                                        "type"
                                    ],
                                    "properties": {
                                        "loc": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "title": "Location"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "title": "Message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "title": "Error Type"
                                        }
                                    }
                                },
                                "PredictionRequest": {
                                    "type": "object",
                                    "title": "PredictionRequest",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "webhook": {
                                            "type": "string",
                                            "title": "Webhook",
                                            "format": "uri",
                                            "maxLength": 65536,
                                            "minLength": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "output_file_prefix": {
                                            "type": "string",
                                            "title": "Output File Prefix"
                                        },
                                        "webhook_events_filter": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WebhookEvent"
                                            },
                                            "default": [
                                                "start",
                                                "output",
                                                "logs",
                                                "completed"
                                            ]
                                        }
                                    }
                                },
                                "PredictionResponse": {
                                    "type": "object",
                                    "title": "PredictionResponse",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "title": "Id"
                                        },
                                        "logs": {
                                            "type": "string",
                                            "title": "Logs",
                                            "default": ""
                                        },
                                        "error": {
                                            "type": "string",
                                            "title": "Error"
                                        },
                                        "input": {
                                            "$ref": "#/components/schemas/Input"
                                        },
                                        "output": {
                                            "$ref": "#/components/schemas/Output"
                                        },
                                        "status": {
                                            "$ref": "#/components/schemas/Status"
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "title": "Metrics"
                                        },
                                        "version": {
                                            "type": "string",
                                            "title": "Version"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "title": "Created At",
                                            "format": "date-time"
                                        },
                                        "started_at": {
                                            "type": "string",
                                            "title": "Started At",
                                            "format": "date-time"
                                        },
                                        "completed_at": {
                                            "type": "string",
                                            "title": "Completed At",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "HTTPValidationError": {
                                    "type": "object",
                                    "title": "HTTPValidationError",
                                    "properties": {
                                        "detail": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ValidationError"
                                            },
                                            "title": "Detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "license_url": "https://github.com/TencentARC/MasaCtrl/blob/main/LICENSE",
                "name": "masactrl-sdxl",
                "owner": "adirik",
                "paper_url": "https://arxiv.org/abs/2304.08465",
                "run_count": 1120,
                "url": "https://replicate.com/adirik/masactrl-sdxl",
                "visibility": "public"
            }
        ]
    },
    "msg": "success",
    "code": 200
}